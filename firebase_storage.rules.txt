rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isOfficer() {
      return request.auth != null &&
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in [
          'General Officer', 'Executive Officer', 'Administrator'
        ];
    }

    function canSubmitEvents() {
      return request.auth != null &&
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in [
         'General Officer', 'Executive Officer', 'Administrator'
        ] &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.status == 'active';
    }

    // New helper: check if user is current submitter of an event request
    function isEventRequestSubmitter(userId) {
      return request.auth != null &&
        exists(/databases/(default)/documents/event_requests/$(userId)) &&
        get(/databases/(default)/documents/event_requests/$(userId)).data.requestedUser == request.auth.uid;
    }

    match /resumes/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /invoices/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == userId || isOfficer() || canSubmitEvents() || isEventRequestSubmitter(userId));
    }

    match /room_bookings/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == userId || isOfficer() || canSubmitEvents() || isEventRequestSubmitter(userId));
    }

    match /logos/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == userId || isOfficer() || canSubmitEvents() || isEventRequestSubmitter(userId));
    }

    match /reimbursements/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == userId || isOfficer() || canSubmitEvents() || isEventRequestSubmitter(userId));
    }

    match /fund_deposits/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == userId || isOfficer() || canSubmitEvents() || isEventRequestSubmitter(userId));
    }

    match /graphics/{userId}/{allPaths=**} {
      allow write: if request.auth != null && isOfficer();
      allow read: if request.auth != null && isOfficer();
    }

    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}