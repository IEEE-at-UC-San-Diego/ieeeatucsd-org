---
// Test page for the enhanced PDF export system
---

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced PDF Export Test</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50 p-8">
    <div class="max-w-4xl mx-auto">
        <h1 class="text-3xl font-bold text-gray-900 mb-8">Enhanced PDF Export Test</h1>
        
        <div class="bg-white p-6 rounded-lg shadow-lg mb-8">
            <h2 class="text-xl font-semibold mb-4">PDF Export Methods</h2>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <button 
                    id="native-pdf" 
                    class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors"
                >
                    Native PDF Export
                </button>
                <button 
                    id="screenshot-pdf" 
                    class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition-colors"
                >
                    Screenshot PDF Export
                </button>
                <button 
                    id="progressive-pdf" 
                    class="bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700 transition-colors"
                >
                    Progressive Export
                </button>
            </div>
        </div>

        <div class="bg-white p-6 rounded-lg shadow-lg mb-8">
            <h2 class="text-xl font-semibold mb-4">Export Progress</h2>
            <div id="progress-container" class="hidden">
                <div class="w-full bg-gray-200 rounded-full h-2.5 mb-2">
                    <div id="progress-bar" class="bg-blue-600 h-2.5 rounded-full transition-all duration-300" style="width: 0%"></div>
                </div>
                <p id="progress-status" class="text-sm text-gray-600">Ready to export...</p>
            </div>
        </div>

        <div class="bg-white p-6 rounded-lg shadow-lg">
            <h2 class="text-xl font-semibold mb-4">Test Document Content</h2>
            <div class="constitution-document" style="font-family: Arial, sans-serif; font-size: 12pt; line-height: 1.6;">
                
                <!-- Page 1: Cover -->
                <div class="constitution-page" style="width: 8.5in; height: 11in; padding: 1in; background: white; margin-bottom: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">
                    <div class="text-center">
                        <div class="mb-12">
                            <img src="/logos/blue_logo_only.png" alt="IEEE Logo" class="w-32 h-32 mx-auto" />
                        </div>
                        <h1 class="text-5xl font-bold text-gray-900 mb-4">IEEE at UC San Diego</h1>
                        <h2 class="text-2xl font-semibold text-gray-700 mb-8">Test Constitution Document</h2>
                        <div class="mt-8">
                            <p class="text-lg text-gray-600 mb-2">Last Updated: January 15, 2025</p>
                            <p class="text-base text-gray-500">Version 1.0 - Test Document</p>
                        </div>
                    </div>
                </div>

                <!-- Page 2: Sample Content -->
                <div class="constitution-page" style="width: 8.5in; height: 11in; padding: 1in; background: white; margin-bottom: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">
                    <h2 class="text-center text-xl font-bold mb-6">ARTICLE I - SAMPLE CONTENT</h2>
                    <h3 class="text-lg font-semibold mb-4">Section 1 - Test Section</h3>
                    <p class="mb-4">This is a test document to verify the enhanced PDF export functionality. The new system uses Puppeteer to capture high-resolution screenshots of each rendered page, applies appropriate scaling and compression, and concatenates all images into a single PDF document.</p>
                    
                    <h3 class="text-lg font-semibold mb-4">Section 2 - Features</h3>
                    <p class="mb-4">Key features of the enhanced PDF export system:</p>
                    <ul class="list-disc pl-6 mb-4">
                        <li>High-resolution screenshot capture using Puppeteer</li>
                        <li>Automatic print dialog launch</li>
                        <li>Multiple quality presets (standard, high, premium, print)</li>
                        <li>Background processing with progress tracking</li>
                        <li>Proper scaling and compression options</li>
                    </ul>

                    <h3 class="text-lg font-semibold mb-4">Section 3 - Technical Details</h3>
                    <p class="mb-4">The system supports multiple export methods:</p>
                    <ul class="list-disc pl-6 mb-4">
                        <li><strong>Native PDF:</strong> Uses Puppeteer's built-in PDF generation</li>
                        <li><strong>Screenshot-based:</strong> Captures individual page screenshots and assembles them</li>
                        <li><strong>Progressive:</strong> Enhanced user experience with detailed progress tracking</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <script type="module">
        // Mock data for testing
        const mockConstitution = {
            id: "test-constitution",
            title: "Test Constitution",
            version: 1,
            lastUpdated: new Date().toISOString()
        };

        const mockSections = [
            {
                id: "preamble",
                type: "preamble",
                title: "Preamble",
                content: "We, the members of IEEE at UC San Diego, in order to advance the theory and application of electrical, electronics, computer, and allied branches of engineering...",
                order: 0
            },
            {
                id: "article-1",
                type: "article",
                title: "Organization",
                content: "This organization shall be known as the IEEE at UC San Diego Student Branch.",
                order: 1
            }
        ];

        const showProgress = (show) => {
            const container = document.getElementById('progress-container');
            if (show) {
                container.classList.remove('hidden');
            } else {
                container.classList.add('hidden');
            }
        };

        const updateProgress = (progress, status) => {
            document.getElementById('progress-bar').style.width = `${progress}%`;
            document.getElementById('progress-status').textContent = status;
        };

        const callAPI = async (method, endpoint) => {
            showProgress(true);
            updateProgress(0, 'Initializing...');

            try {
                const response = await fetch(endpoint, {
                    method,
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        constitution: mockConstitution,
                        sections: mockSections,
                        options: {
                            quality: 100,
                            scale: 2,
                            dpi: 300,
                            compression: 'medium'
                        }
                    })
                });

                if (!response.ok) {
                    throw new Error(`Server error: ${response.status}`);
                }

                updateProgress(70, 'Receiving PDF...');
                const blob = await response.blob();
                
                updateProgress(90, 'Opening PDF...');
                const url = URL.createObjectURL(blob);
                
                // Open PDF in new window with print dialog
                const printWindow = window.open('', '_blank');
                if (printWindow) {
                    printWindow.document.write(`
                        <!DOCTYPE html>
                        <html>
                        <head>
                            <title>Test PDF Export</title>
                            <style>body { margin: 0; } embed { width: 100vw; height: 100vh; }</style>
                        </head>
                        <body>
                            <embed src="${url}" type="application/pdf" />
                            <script>
                                window.addEventListener('load', function() {
                                    setTimeout(function() { window.print(); }, 1000);
                                });
                            </script>
                        </body>
                        </html>
                    `);
                    printWindow.document.close();
                }

                // Also create download link
                const link = document.createElement('a');
                link.href = url;
                link.download = 'test-export.pdf';
                link.click();
                
                updateProgress(100, 'PDF export completed!');
                
                setTimeout(() => {
                    showProgress(false);
                    URL.revokeObjectURL(url);
                }, 2000);

            } catch (error) {
                console.error('Export failed:', error);
                updateProgress(0, `Export failed: ${error.message}`);
                setTimeout(() => showProgress(false), 3000);
            }
        };

        // Event listeners
        document.getElementById('native-pdf').addEventListener('click', () => {
            callAPI('POST', '/api/export-pdf-puppeteer');
        });

        document.getElementById('screenshot-pdf').addEventListener('click', () => {
            callAPI('PUT', '/api/export-pdf-puppeteer');
        });

        document.getElementById('progressive-pdf').addEventListener('click', () => {
            // For now, use the same endpoint but with different visual feedback
            updateProgress(5, 'Validating document structure...');
            setTimeout(() => updateProgress(15, 'Launching high-resolution browser...'), 300);
            setTimeout(() => updateProgress(25, 'Loading fonts and assets...'), 600);
            setTimeout(() => callAPI('PUT', '/api/export-pdf-puppeteer'), 900);
        });
    </script>
</body>
</html> 